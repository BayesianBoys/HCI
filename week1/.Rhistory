geom_violin() +
scale_fill_manual(values = wes_palette("Royal1")) +
labs(x = "Order of websites",
y = "Velocity of saccades",
title = "Order vs. saccade velocity") +
theme_minimal()
ui <- dashboardPage(
dashboardHeader(
#This is the header
), #End Dashboard header
dashboardSidebar(
sidebarMenu(
menuItem("Histogram", tabName = "one", icon = icon("accessible-icon")),
menuItem("Tasks", tabName = "two", icon = icon("laptop-code")),
menuItem("Interactive", tabName = "three", icon = icon("grin-stars")),
menuItem("Animation", tabName = "four", icon = icon("play"))
)
# This is the sidebar
), #End dashboard Sidebar
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "one",
fluidRow(
box(plotOutput("plot1", height = 250)), #Add plot,specify size.
box( #Create a box with interactive controls
title = "Controls", #Title of the box
sliderInput("slider", "Number of observations:", 1, 100, 50)))),
#Input to the slider),
#the tabName should refer to the tabname from the sidebar menu.
# Second tab content
tabItem(tabName = "two",
fluidRow(
box(plotOutput("plot2", height = 250)), #Add plot,specify size.
box(selectInput(inputId = "select_plot",
label = "select a plot :)",
choices = c("Age/Time",
"Expertise/Ratio",
"OrderEffect"))))),
# Third tab content
tabItem(tabName = "three",
fluidRow(
box(plotOutput("plot3")),
box(plotOutput("plot4"))),
fluidRow( #Add plot,specify size.
box(width = 12, #Create a box with interactive controls
title = "Time control", #Title of the box
sliderInput("time_slider1", "Timestep", 1, max(d$timestep), 1, width = "100%", animate = animationOptions(interval = 1, loop = TRUE))))),
tabItem(tabname = "four",
fluidRow(box(plotOutput("plot5")),
box(plotOutput("plot6"))),
fluidRow( #Add plot,specify size.
box(width = 12, #Create a box with interactive controls
title = "Time control", #Title of the box
sliderInput("time_slider2", "Timestep", 1, max(d_fix$n), 1, width = "100%", animate = animationOptions(interval = 1, loop = TRUE)))))
) #End of tab items
# This is the body
) # End dashboard Body
) #End Dashboard Page
server <- function(input, output) {
## first plot
set.seed(122)
histdata <- rnorm(500) # Simulate 500 data points, which are normally distributed
output$plot1 <- renderPlot({
data <- histdata[seq_len(input$slider)] #Record slider input
hist(data) #Create a histogram over the data
}) #End of Output$plot1 brackets
output$plot2 <- renderPlot({
if(input$select_plot == "Age/Time"){
p1
}
else if(input$select_plot == "Expertise/Ratio"){
p2
}
else if(input$select_plot == "OrderEffect"){
p3
}
})
output$plot3 <- renderPlot({
d %>%
filter(timestep <= input$time_slider1) %>%
ggplot(aes(x, y, color = website)) +
geom_point(alpha = 0.01) +
geom_density2d() +
xlim(0, 1600)+
ylim(0, 900)+
labs(title = "Position of Eyes") +
scale_color_manual(values = wes_palette("Cavalcanti1")) +
theme_fivethirtyeight()
})
output$plot4 <- renderPlot({
d %>%
filter(timestep <= input$time_slider1) %>%
ggplot(aes(mouse_x, mouse_y, color = website)) +
geom_point(alpha = 0.01) +
geom_density2d() +
xlim(0, 1600)+
ylim(0, 900)+
labs(title = "Mouse position") +
scale_color_manual(values = wes_palette("Cavalcanti1")) +
theme_fivethirtyeight()
})
output$plot5 <- renderPlot({
d_fix %>%
filter(n <= input$time_slider2) %>%
ggplot(aes(x, y, color = website)) +
geom_point(alpha = 0.01) +
geom_density2d() +
xlim(0, 1600)+
ylim(0, 900)+
labs(title = "Position of Eyes") +
scale_color_manual(values = wes_palette("Cavalcanti1")) +
theme_fivethirtyeight()
})
output$plot6 <- renderPlot({
d_fix %>%
filter(n <= input$time_slider2) %>%
ggplot(aes(mouse_x, mouse_y, color = website)) +
geom_point(alpha = 0.01) +
geom_density2d() +
xlim(0, 1600)+
ylim(0, 900)+
labs(title = "Mouse position") +
scale_color_manual(values = wes_palette("Cavalcanti1")) +
theme_fivethirtyeight()
})
} # End server function
shinyApp(ui, server) #Run this to open your app
## reactive stuff.
d_fix <- read.csv("~/HCI/week1/fix.csv")
# read data
d <- read.csv("~/HCI/week1/clean_data.csv") %>%
as_tibble() %>%
mutate(website = as_factor(website),
event = as_factor(event),
name = as_factor(name),
order_tickets_online = as_factor(order_tickets_online),
session = as_factor(session),
cinemaxx_1st = as_factor(cinemaxx_1st))
## 1) plot 1.
p1 <- d %>% group_by(name, website) %>%
summarize(max_time = max(timestep),
age = max(age)) %>%
ungroup %>%
ggplot(aes(x = age, y = max_time, color = website)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(y = "max time for completion", title = "Age vs. completion time") +
scale_color_manual(values = wes_palette("Cavalcanti1")) +
theme_minimal()
# 2) How does order_tickets_online affect the fixation/saccade ratio
# (Consider  collapsing the "rarely" and the "never")
## wrangle 1.
d_wrangle <- d %>%
mutate(tickets_online = as.numeric(forcats::fct_recode(order_tickets_online,
"0" = "Rarely",
"0" = "Never",
"1" = "Often")) - 1) %>%
mutate(event_num = as.numeric(forcats::fct_recode(event,
"0" = "fixation",
"1" = "saccade")) - 1) %>%
group_by(session, website, name) %>%
mutate(n = row_number()) %>%
glimpse()
## wrangle 2.
d_sub <- d_wrangle %>%
group_by(website, name) %>%
summarize(ratio = sum(event_num)/max(n),
tickets_online = max(tickets_online)) %>%
glimpse()
## plot 2.
p2 <- d_sub %>%
ggplot(aes(x = as_factor(tickets_online),
y = ratio,
fill = website)) +
geom_boxplot() +
labs(x = "order tickets online",
title = "Expertise vs. fixation/saccade ratio") +
scale_fill_manual(values = wes_palette("Moonrise2")) +
theme_minimal()
# 3) How does the order effect (cinemax_1st) affect velocity on the different websites
p3 <- d %>%
filter(event == "saccade") %>%
ggplot(aes(x = cinemaxx_1st,
y = velocity,
fill = website)) +
geom_violin() +
scale_fill_manual(values = wes_palette("Royal1")) +
labs(x = "Order of websites",
y = "Velocity of saccades",
title = "Order vs. saccade velocity") +
theme_minimal()
ui <- dashboardPage(
dashboardHeader(
#This is the header
), #End Dashboard header
dashboardSidebar(
sidebarMenu(
menuItem("Histogram", tabName = "one", icon = icon("accessible-icon")),
menuItem("Tasks", tabName = "two", icon = icon("laptop-code")),
menuItem("Interactive", tabName = "three", icon = icon("grin-stars")),
menuItem("Animation", tabName = "four", icon = icon("play"))
)
# This is the sidebar
), #End dashboard Sidebar
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "one",
fluidRow(
box(plotOutput("plot1", height = 250)), #Add plot,specify size.
box( #Create a box with interactive controls
title = "Controls", #Title of the box
sliderInput("slider", "Number of observations:", 1, 100, 50)))),
#Input to the slider),
#the tabName should refer to the tabname from the sidebar menu.
# Second tab content
tabItem(tabName = "two",
fluidRow(
box(plotOutput("plot2", height = 250)), #Add plot,specify size.
box(selectInput(inputId = "select_plot",
label = "select a plot :)",
choices = c("Age/Time",
"Expertise/Ratio",
"OrderEffect"))))),
# Third tab content
tabItem(tabName = "three",
fluidRow(
box(plotOutput("plot3")),
box(plotOutput("plot4"))),
fluidRow( #Add plot,specify size.
box(width = 12, #Create a box with interactive controls
title = "Time control", #Title of the box
sliderInput("time_slider1", "Timestep", 1, max(d$timestep), 1, width = "100%", animate = animationOptions(interval = 1, loop = TRUE))))),
tabItem(tabname = "four",
fluidRow(box(plotOutput("plot5")),
box(plotOutput("plot6"))),
fluidRow( #Add plot,specify size.
box(width = 12, #Create a box with interactive controls
title = "Time control", #Title of the box
sliderInput("time_slider2",
"Timestep",
1,
max(d_fix$n),
1,
width = "100%",
animate = animationOptions(interval = 1, loop = TRUE)))))
) #End of tab items
# This is the body
) # End dashboard Body
) #End Dashboard Page
server <- function(input, output) {
## first plot
set.seed(122)
histdata <- rnorm(500) # Simulate 500 data points, which are normally distributed
output$plot1 <- renderPlot({
data <- histdata[seq_len(input$slider)] #Record slider input
hist(data) #Create a histogram over the data
}) #End of Output$plot1 brackets
output$plot2 <- renderPlot({
if(input$select_plot == "Age/Time"){
p1
}
else if(input$select_plot == "Expertise/Ratio"){
p2
}
else if(input$select_plot == "OrderEffect"){
p3
}
})
output$plot3 <- renderPlot({
d %>%
filter(timestep <= input$time_slider1) %>%
ggplot(aes(x, y, color = website)) +
geom_point(alpha = 0.01) +
geom_density2d() +
xlim(0, 1600)+
ylim(0, 900)+
labs(title = "Position of Eyes") +
scale_color_manual(values = wes_palette("Cavalcanti1")) +
theme_fivethirtyeight()
})
output$plot4 <- renderPlot({
d %>%
filter(timestep <= input$time_slider1) %>%
ggplot(aes(mouse_x, mouse_y, color = website)) +
geom_point(alpha = 0.01) +
geom_density2d() +
xlim(0, 1600)+
ylim(0, 900)+
labs(title = "Mouse position") +
scale_color_manual(values = wes_palette("Cavalcanti1")) +
theme_fivethirtyeight()
})
output$plot5 <- renderPlot({
d_fix %>%
filter(n <= input$time_slider2) %>%
ggplot(aes(x, y, color = website)) +
geom_point(alpha = 0.01) +
geom_density2d() +
xlim(0, 1600)+
ylim(0, 900)+
labs(title = "Position of Eyes") +
scale_color_manual(values = wes_palette("Cavalcanti1")) +
theme_fivethirtyeight()
})
output$plot6 <- renderPlot({
d_fix %>%
filter(n <= input$time_slider2) %>%
ggplot(aes(mouse_x, mouse_y, color = website)) +
geom_point(alpha = 0.01) +
geom_density2d() +
xlim(0, 1600)+
ylim(0, 900)+
labs(title = "Mouse position") +
scale_color_manual(values = wes_palette("Cavalcanti1")) +
theme_fivethirtyeight()
})
} # End server function
shinyApp(ui, server) #Run this to open your app
## reactive stuff.
d_fix <- read.csv("~/HCI/week1/fix.csv")
# read data
d <- read.csv("~/HCI/week1/clean_data.csv") %>%
as_tibble() %>%
mutate(website = as_factor(website),
event = as_factor(event),
name = as_factor(name),
order_tickets_online = as_factor(order_tickets_online),
session = as_factor(session),
cinemaxx_1st = as_factor(cinemaxx_1st))
## 1) plot 1.
p1 <- d %>% group_by(name, website) %>%
summarize(max_time = max(timestep),
age = max(age)) %>%
ungroup %>%
ggplot(aes(x = age, y = max_time, color = website)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(y = "max time for completion", title = "Age vs. completion time") +
scale_color_manual(values = wes_palette("Cavalcanti1")) +
theme_minimal()
# 2) How does order_tickets_online affect the fixation/saccade ratio
# (Consider  collapsing the "rarely" and the "never")
## wrangle 1.
d_wrangle <- d %>%
mutate(tickets_online = as.numeric(forcats::fct_recode(order_tickets_online,
"0" = "Rarely",
"0" = "Never",
"1" = "Often")) - 1) %>%
mutate(event_num = as.numeric(forcats::fct_recode(event,
"0" = "fixation",
"1" = "saccade")) - 1) %>%
group_by(session, website, name) %>%
mutate(n = row_number()) %>%
glimpse()
## wrangle 2.
d_sub <- d_wrangle %>%
group_by(website, name) %>%
summarize(ratio = sum(event_num)/max(n),
tickets_online = max(tickets_online)) %>%
glimpse()
## plot 2.
p2 <- d_sub %>%
ggplot(aes(x = as_factor(tickets_online),
y = ratio,
fill = website)) +
geom_boxplot() +
labs(x = "order tickets online",
title = "Expertise vs. fixation/saccade ratio") +
scale_fill_manual(values = wes_palette("Moonrise2")) +
theme_minimal()
# 3) How does the order effect (cinemax_1st) affect velocity on the different websites
p3 <- d %>%
filter(event == "saccade") %>%
ggplot(aes(x = cinemaxx_1st,
y = velocity,
fill = website)) +
geom_violin() +
scale_fill_manual(values = wes_palette("Royal1")) +
labs(x = "Order of websites",
y = "Velocity of saccades",
title = "Order vs. saccade velocity") +
theme_minimal()
ui <- dashboardPage(
dashboardHeader(
#This is the header
), #End Dashboard header
dashboardSidebar(
sidebarMenu(
menuItem("Histogram", tabName = "one", icon = icon("accessible-icon")),
menuItem("Tasks", tabName = "two", icon = icon("laptop-code")),
menuItem("Interactive", tabName = "three", icon = icon("grin-stars")),
menuItem("Animation", tabName = "four", icon = icon("play"))
)
# This is the sidebar
), #End dashboard Sidebar
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "one",
fluidRow(
box(plotOutput("plot1", height = 250)), #Add plot,specify size.
box( #Create a box with interactive controls
title = "Controls", #Title of the box
sliderInput("slider", "Number of observations:", 1, 100, 50)))),
#Input to the slider),
#the tabName should refer to the tabname from the sidebar menu.
# Second tab content
tabItem(tabName = "two",
fluidRow(
box(plotOutput("plot2", height = 250)), #Add plot,specify size.
box(selectInput(inputId = "select_plot",
label = "select a plot :)",
choices = c("Age/Time",
"Expertise/Ratio",
"OrderEffect"))))),
# Third tab content
tabItem(tabName = "three",
fluidRow(
box(plotOutput("plot3")),
box(plotOutput("plot4"))),
fluidRow( #Add plot,specify size.
box(width = 12, #Create a box with interactive controls
title = "Time control", #Title of the box
sliderInput("time_slider1", "Timestep", 1, max(d$timestep), 1, width = "100%", animate = animationOptions(interval = 1, loop = TRUE))))),
tabItem(tabname = "four",
#fluidRow(box(plotOutput("plot5")),
#   box(plotOutput("plot6"))),
# fluidRow( #Add plot,specify size.
#  box(width = 12, #Create a box with interactive controls
# title = "Time control", #Title of the box
# sliderInput("time_slider2",
#     "Timestep",
#    1,
#   max(d_fix$n),
#    1,
#    width = "100%",
#     animate = animationOptions(interval = 1, loop = TRUE)))))
) #End of tab items
# This is the body
) # End dashboard Body
) #End Dashboard Page
server <- function(input, output) {
## first plot
set.seed(122)
histdata <- rnorm(500) # Simulate 500 data points, which are normally distributed
output$plot1 <- renderPlot({
data <- histdata[seq_len(input$slider)] #Record slider input
hist(data) #Create a histogram over the data
}) #End of Output$plot1 brackets
output$plot2 <- renderPlot({
if(input$select_plot == "Age/Time"){
p1
}
else if(input$select_plot == "Expertise/Ratio"){
p2
}
else if(input$select_plot == "OrderEffect"){
p3
}
})
output$plot3 <- renderPlot({
d %>%
filter(timestep <= input$time_slider1) %>%
ggplot(aes(x, y, color = website)) +
geom_point(alpha = 0.01) +
geom_density2d() +
xlim(0, 1600)+
ylim(0, 900)+
labs(title = "Position of Eyes") +
scale_color_manual(values = wes_palette("Cavalcanti1")) +
theme_fivethirtyeight()
})
output$plot4 <- renderPlot({
d %>%
filter(timestep <= input$time_slider1) %>%
ggplot(aes(mouse_x, mouse_y, color = website)) +
geom_point(alpha = 0.01) +
geom_density2d() +
xlim(0, 1600)+
ylim(0, 900)+
labs(title = "Mouse position") +
scale_color_manual(values = wes_palette("Cavalcanti1")) +
theme_fivethirtyeight()
})
output$plot5 <- renderPlot({
d_fix %>%
filter(n <= input$time_slider2) %>%
ggplot(aes(x, y, color = website)) +
geom_point(alpha = 0.01) +
geom_density2d() +
xlim(0, 1600)+
ylim(0, 900)+
labs(title = "Position of Eyes") +
scale_color_manual(values = wes_palette("Cavalcanti1")) +
theme_fivethirtyeight()
})
output$plot6 <- renderPlot({
d_fix %>%
filter(n <= input$time_slider2) %>%
ggplot(aes(mouse_x, mouse_y, color = website)) +
geom_point(alpha = 0.01) +
geom_density2d() +
xlim(0, 1600)+
ylim(0, 900)+
labs(title = "Mouse position") +
scale_color_manual(values = wes_palette("Cavalcanti1")) +
theme_fivethirtyeight()
})
} # End server function
shinyApp(ui, server) #Run this to open your app
